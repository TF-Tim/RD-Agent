# ───────────────────────────── GLOBAL INIT ─────────────────────────────
qlib_init:
    provider_uri: "~/.qlib/qlib_data/us_data"
    region: us

market:    &market     sp500
benchmark: &benchmark  ^GSPC              # Qlib’s S&P 500 index code

# ───────────────────────────── DATA HANDLER ─────────────────────────────
data_handler_config: &data_handler_config
    # time span
    start_time: 2010-01-01
    end_time:   2023-12-31
    instruments: *market

    # ---------- nested loader (Alpha158 + external parquet) ----------
    data_loader:
        class: NestedDataLoader
        kwargs:
            dataloader_l:
              # ① Alpha158 features + labels
              - class: qlib.contrib.data.loader.Alpha158DL
                kwargs:
                    config:
                        label:
                          - ["Ref($close, -2)/Ref($close, -1) - 1"]
                          - ["LABEL0"]
                        feature:
                          # 20 Alpha158 features
                          - ["Resi($close, 5)/$close", "Std(Abs($close/Ref($close,1)-1)*$volume, 5)/(Mean(Abs($close/Ref($close,1)-1)*$volume, 5)+1e-12)",
                             "Rsquare($close, 5)", "($high-$low)/$open", "Rsquare($close, 10)", "Corr($close, Log($volume+1), 5)",
                             "Corr($close/Ref($close,1), Log($volume/Ref($volume,1)+1), 5)", "Corr($close, Log($volume+1), 10)",
                             "Ref($close, 60)/$close", "Resi($close, 10)/$close", "Std($volume, 5)/($volume+1e-12)",
                             "Rsquare($close, 60)", "Corr($close, Log($volume+1), 60)", "Std(Abs($close/Ref($close,1)-1)*$volume, 60)/(Mean(Abs($close/Ref($close,1)-1)*$volume, 60)+1e-12)",
                             "Std($close, 5)/$close", "Rsquare($close, 20)", "Corr($close/Ref($close,1), Log($volume/Ref($volume,1)+1), 60)",
                             "Corr($close/Ref($close,1), Log($volume/Ref($volume,1)+1), 10)", "Corr($close, Log($volume+1), 20)",
                             "(Less($open, $close)-$low)/$open"]
                          - ["RESI5","WVMA5","RSQR5","KLEN","RSQR10","CORR5","CORD5","CORR10",
                             "ROC60","RESI10","VSTD5","RSQR60","CORR60","WVMA60","STD5",
                             "RSQR20","CORD60","CORD10","CORR20","KLOW"]
              # ② custom parquet combined factors
              - class: qlib.data.dataset.loader.StaticDataLoader
                kwargs: {config: "combined_factors_df.parquet"}

    # ---------- processors ----------
    infer_processors:
      - class: RobustZScoreNorm
        kwargs: {fields_group: feature, clip_outlier: true, fit_start_time: 2010-01-01, fit_end_time: 2016-12-31}
      - class: Fillna
        kwargs: {fields_group: feature}

    learn_processors:
      - class: DropnaLabel
      - class: CSZScoreNorm
        kwargs: {fields_group: label}

# ───────────────────────────── BACK-TEST (ANCHOR) ─────────────────────────────
backtest: &backtest
    start_time: 2020-01-01
    end_time:   2023-12-31
    account:    100000000
    benchmark:  *benchmark
    exchange_kwargs:
        limit_threshold: 0.099
        deal_price:      close
        open_cost:       0.0005
        close_cost:      0.0015
        min_cost:        1

# ───────────────────────────── PORT ANALYSIS ─────────────────────────────
port_analysis_config: &port_analysis_config
    strategy:
        class: TopkDropoutStrategy
        module_path: qlib.contrib.strategy
        kwargs: {signal: <PRED>, topk: 50, n_drop: 5}
    backtest: *backtest

# ───────────────────────────── TASK ─────────────────────────────
task:
    # ---------- MODEL ----------
    model:
        class: LGBModel
        module_path: qlib.contrib.model.gbdt
        kwargs:
            loss:             mse
            colsample_bytree: 0.90
            learning_rate:    0.15
            subsample:        0.90
            lambda_l1:        50
            lambda_l2:        120
            max_depth:        8
            num_leaves:       256
            num_threads:      20

    # ---------- DATASET ----------
    dataset:
        class: DatasetH
        module_path: qlib.data.dataset
        kwargs:
            handler:
                class: DataHandlerLP
                module_path: qlib.contrib.data.handler
                kwargs: *data_handler_config
            segments:
                train: [2010-01-01, 2016-12-31]
                valid: [2017-01-01, 2019-12-31]
                test:  [2020-01-01, 2023-12-31]

    # ---------- RECORDERS ----------
    record:
      - class: SignalRecord
        module_path: qlib.workflow.record_temp
        kwargs: {model: <MODEL>, dataset: <DATASET>}
      - class: SigAnaRecord
        module_path: qlib.workflow.record_temp
        kwargs: {ana_long_short: false, ann_scaler: 252}
      - class: PortAnaRecord
        module_path: qlib.workflow.record_temp
        kwargs: {config: *port_analysis_config}
