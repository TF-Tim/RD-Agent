# ───────────────────────────── GLOBAL INIT ─────────────────────────────
qlib_init:
    provider_uri: "~/.qlib/qlib_data/us_data"
    region: us

market:    &market     sp500
benchmark: &benchmark  ^GSPC

# ───────────────────────────── DATA HANDLER ─────────────────────────────
data_handler_config: &data_handler_config
    # time range
    start_time:      2010-01-01
    end_time:        2023-12-31
    fit_start_time:  2010-01-01
    fit_end_time:    2016-12-31
    instruments:     *market

    # feature pre-processing (same 20 Alpha158 columns as baseline)
    infer_processors:
      - class: FilterCol
        kwargs:
            fields_group: feature
            col_list: ["RESI5","WVMA5","RSQR5","KLEN","RSQR10","CORR5","CORD5","CORR10",
                       "ROC60","RESI10","VSTD5","RSQR60","CORR60","WVMA60","STD5",
                       "RSQR20","CORD60","CORD10","CORR20","KLOW"]
      - class: RobustZScoreNorm
        kwargs: {fields_group: feature, clip_outlier: true}
      - class: Fillna
        kwargs: {fields_group: feature}

    learn_processors:
      - class: DropnaLabel
      - class: CSRankNorm
        kwargs: {fields_group: label}

    # one-day-ahead return label
    label: ["Ref($close, -2) / Ref($close, -1) - 1"]

# ───────────────────────────── BACK-TEST ANCHOR ─────────────────────────────
backtest: &backtest
    start_time: 2020-01-01
    end_time:   2023-12-31
    account:    100000000
    benchmark:  *benchmark
    exchange_kwargs:
        limit_threshold: 0.099
        deal_price:      close
        open_cost:       0.0005
        close_cost:      0.0015
        min_cost:        1

# ───────────────────────────── PORT ANALYSIS ─────────────────────────────
port_analysis_config: &port_analysis_config
    strategy:
        class: TopkDropoutStrategy
        module_path: qlib.contrib.strategy
        kwargs: {signal: <PRED>, topk: 50, n_drop: 5}
    backtest: *backtest

# ───────────────────────────── TASK ─────────────────────────────
task:
    # ---------- MODEL ----------
    model:
        class: GeneralPTNN                     # PyTorch general NN
        module_path: qlib.contrib.model.pytorch_general_nn
        kwargs:
            n_epochs:     {{ n_epochs     | default(50) }}
            lr:           {{ lr           | default(1e-3) }}
            early_stop:   {{ early_stop   | default(10) }}
            batch_size:   {{ batch_size   | default(2048) }}
            weight_decay: {{ weight_decay | default(1e-5) }}
            metric: loss
            loss:   mse
            n_jobs: 20
            GPU:    0
            pt_model_uri: "model.model_cls"
            pt_model_kwargs: {"num_features": 20}

    # ---------- DATASET ----------
    dataset:
        class: {{ dataset_cls | default("DatasetH") }}
        module_path: qlib.data.dataset
        kwargs:
            handler:
                class: Alpha158
                module_path: qlib.contrib.data.handler
                kwargs: *data_handler_config
            segments:
                train: [2010-01-01, 2016-12-31]
                valid: [2017-01-01, 2019-12-31]
                test:  [2020-01-01, 2023-12-31]

    # ---------- RECORDERS ----------
    record:
      - class: SignalRecord
        module_path: qlib.workflow.record_temp
        kwargs: {model: <MODEL>, dataset: <DATASET>}
      - class: SigAnaRecord
        module_path: qlib.workflow.record_temp
        kwargs: {ana_long_short: false, ann_scaler: 252}
      - class: PortAnaRecord
        module_path: qlib.workflow.record_temp
        kwargs: {config: *port_analysis_config}
